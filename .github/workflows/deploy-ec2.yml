name: Build and Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target/

      - name: Set up SSH key
        run: |
          echo "${{ secrets.DEPLOY_KEY }}" > key.pem
          chmod 400 key.pem

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "target/*.jar"
          target: "/home/${{ secrets.DEPLOY_USER }}/deployment/target/"

      - name: Restart Spring Boot service
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} \
            'sudo systemctl restart spring-boot-app || (pkill -f "java -jar" && nohup java --add-opens java.base/java.lang=ALL-UNNAMED -jar /home/${{ secrets.DEPLOY_USER }}/deployment/target/*.jar > app.log 2>&1 &)'
